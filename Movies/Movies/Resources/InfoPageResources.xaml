<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary xmlns="http://xamarin.com/schemas/2014/forms"
                    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                    xmlns:movies="clr-namespace:Movies"
                    xmlns:converters="clr-namespace:Movies.Converters"
                    xmlns:models="clr-namespace:Movies.Models"
                    xmlns:templates="clr-namespace:Movies.Templates"
                    xmlns:viewmodels="clr-namespace:Movies.ViewModels"
                    xmlns:views="clr-namespace:Movies.Views"
                    xmlns:generic="clr-namespace:System.Collections.Generic;assembly=netstandard"
                    xmlns:ext="clr-namespace:Xamarin.Forms.Extensions;assembly=Xamarin.Forms.Extensions"
                    xmlns:forms="clr-namespace:Xamarin.Forms;assembly=Xamarin.Forms.Extensions"
                    xmlns:ffil="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
                    x:Class="Movies.Views.InfoPageResources">
    <DataTemplate x:Key="DefaultTemplate">
        <Label Text="{Binding}"
               IsVisible="{Binding Text, Source={RelativeSource Self}, Converter={Static forms:ObjectToFalseConverter.Instance}, ConverterParameter={Static x:String.Empty}}" />
    </DataTemplate>

    <DataTemplate x:Key="DefaultInfoTemplate">
        <views:LabeledLabel Label="{Binding Label}"
                            Value="{Binding Value}" />
    </DataTemplate>

    <DataTemplate x:Key="MediaTemplate">
        <views:ImageView ext:ContentView.ContentTemplate="{StaticResource MediaTemplateSelector}"
                         ext:ContentView.ItemSource="{Binding}"
                         VerticalOptions="Start"
                         AltText="Content not available" />
    </DataTemplate>

    <Style x:Key="RatingStyle"
           TargetType="Frame"
           BasedOn="{StaticResource CardStyle}">
        <Setter Property="Padding"
                Value="10" />
        <Setter Property="WidthRequest"
                Value="100" />
    </Style>

    <DataTemplate x:Key="ExternalRatingTemplate"
                  x:DataType="models:Rating">
        <Frame Style="{StaticResource RatingStyle}">
            <View.GestureRecognizers>
                <TapGestureRecognizer CommandParameter="{Binding}">
                    <TapGestureRecognizer.Command>
                        <viewmodels:OpenReviewsCommand>
                            <DataTemplate>
                                <views:ReviewsPage Title="{Binding Company.Name}" />
                            </DataTemplate>
                        </viewmodels:OpenReviewsCommand>
                    </TapGestureRecognizer.Command>
                </TapGestureRecognizer>
            </View.GestureRecognizers>

            <StackLayout Orientation="Vertical">
                <Label Text="{Binding Company.Name}"
                       FontSize="Small"
                       LineBreakMode="TailTruncation" />

                <StackLayout Orientation="Horizontal"
                             VerticalOptions="FillAndExpand">
                    <Image HorizontalOptions="FillAndExpand"
                           WidthRequest="0"
                           HeightRequest="0">
                        <Image.Source>
                            <Binding Path="Company.LogoPath"
                                     Converter="{Static converters:UriToImageSourceConverter.Instance}">
                                <Binding.ConverterParameter>
                                    <UriImageSource CacheValidity="{Static movies:App.LogoCacheValidity}" />
                                </Binding.ConverterParameter>
                            </Binding>
                        </Image.Source>
                    </Image>

                    <Label Text="{Binding Score}"
                           VerticalTextAlignment="Center"
                           FontAttributes="Bold"
                           FontSize="Title"
                           TextColor="{AppThemeBinding Light={StaticResource LightPrimaryText}, Dark={StaticResource DarkPrimaryText}}" />
                </StackLayout>

                <Label Text="See Reviews >"
                       FontSize="Caption"
                       HorizontalTextAlignment="End"
                       LineBreakMode="HeadTruncation"
                       Opacity="{Binding Reviews, Converter={Static viewmodels:NullToBooleanIntConverter.Instance}}"/>
            </StackLayout>
        </Frame>
    </DataTemplate>

    <DataTemplate x:Key="ExternalRatingTemplate2"
                  x:DataType="models:Rating">
        <Frame Style="{StaticResource RatingStyle}">
            <View.GestureRecognizers>
                <TapGestureRecognizer CommandParameter="{Binding}">
                    <TapGestureRecognizer.Command>
                        <viewmodels:OpenReviewsCommand>
                            <DataTemplate>
                                <views:ReviewsPage Title="{Binding Company.Name}" />
                            </DataTemplate>
                        </viewmodels:OpenReviewsCommand>
                    </TapGestureRecognizer.Command>
                </TapGestureRecognizer>
            </View.GestureRecognizers>

            <Grid RowDefinitions="*, Auto, *"
                  ColumnDefinitions="*, Auto"
                  ColumnSpacing="10">
                <Label Text="{Binding Company.Name}"
                       FontSize="Small"
                       LineBreakMode="TailTruncation"
                       Grid.Row="0"
                       Grid.Column="0"
                       Grid.ColumnSpan="2" />

                <Image Grid.Row="1"
                       Grid.Column="0">
                    <Image.Source>
                        <Binding Path="Company.LogoPath"
                                 Converter="{Static converters:UriToImageSourceConverter.Instance}">
                            <Binding.ConverterParameter>
                                <UriImageSource CacheValidity="{Static movies:App.LogoCacheValidity}" />
                            </Binding.ConverterParameter>
                        </Binding>
                    </Image.Source>
                </Image>

                <Label Text="{Binding Score}"
                       Style="{StaticResource ValueDescriptorStyle}"
                       FontSize="Title"
                       VerticalOptions="Center"
                       Grid.Row="1"
                       Grid.Column="1" />

                <Label Text="See Reviews >"
                       FontSize="Caption"
                       HorizontalOptions="End"
                       LineBreakMode="HeadTruncation"
                       IsVisible="{Binding Reviews, Converter={Static forms:FalseIfNullConverter.Instance}}"
                       Grid.Row="2"
                       Grid.Column="0"
                       Grid.ColumnSpan="2" />
            </Grid>
        </Frame>
    </DataTemplate>

    <DataTemplate x:Key="ExternalRatingTemplate1"
                  x:DataType="models:Rating">
        <Frame Style="{StaticResource RatingStyle}">
            <View.GestureRecognizers>
                <TapGestureRecognizer CommandParameter="{Binding}">
                    <TapGestureRecognizer.Command>
                        <views:PushPageCommand>
                            <DataTemplate>
                                <views:ReviewsPage Title="{Binding Title, StringFormat='{0} Reviews', Source={RelativeSource AncestorType={x:Type Page}, AncestorLevel=2}}" />
                            </DataTemplate>
                        </views:PushPageCommand>
                    </TapGestureRecognizer.Command>
                </TapGestureRecognizer>
            </View.GestureRecognizers>

            <StackLayout Orientation="Vertical">
                <Label Text="{Binding Company.Name}"
                       Style="{StaticResource ValueDescriptorStyle}" />

                <FlexLayout Direction="Row"
                            AlignItems="Center"
                            JustifyContent="SpaceEvenly"
                            VerticalOptions="FillAndExpand">
                    <views:ImageView AltText="{Binding Company.Name}"
                                     WidthRequest="40"
                                     HeightRequest="25">
                        <Image Source="{Binding Company.LogoPath}"
                               BackgroundColor="White" />
                    </views:ImageView>
                    <Label Text="{Binding Score}"
                           FontSize="Large" />
                </FlexLayout>

                <Label Text="See Reviews >"
                       HorizontalOptions="End" />
            </StackLayout>
        </Frame>
    </DataTemplate>

    <DataTemplate x:Key="PersonalRatingTemplate"
                  x:DataType="models:Rating">
        <Frame Style="{StaticResource RatingStyle}">
            <View.GestureRecognizers>
                <TapGestureRecognizer CommandParameter="{Binding}">
                    <TapGestureRecognizer.Command>
                        <views:PushPageCommand PageTemplate="{DataTemplate views:PersonalReviewPage}" />
                    </TapGestureRecognizer.Command>
                </TapGestureRecognizer>
            </View.GestureRecognizers>

            <StackLayout Orientation="Vertical">
                <Label Text="My Rating"
                       Style="{StaticResource ValueDescriptorStyle}" />
                <Label Text="{Binding Score, StringFormat='{0} stars', TargetNullValue='Not rated'}"
                       VerticalTextAlignment="Center"
                       HorizontalOptions="Center"
                       VerticalOptions="FillAndExpand" />
                <Label Text="Edit >"
                       HorizontalOptions="End" />
            </StackLayout>
        </Frame>
    </DataTemplate>

    <movies:RatingTemplateSelector x:Key="RatingTemplateSelector"
                                   ExternalRatingTemplate="{StaticResource ExternalRatingTemplate}"
                                   PersonalRatingTemplate="{StaticResource PersonalRatingTemplate}" />

    <DataTemplate x:Key="RatingListTemplate">
        <CollectionView ItemsSource="{Binding}"
                        ItemTemplate="{StaticResource RatingTemplateSelector}"
                        HeightRequest="100"
                        EmptyView="No ratings available">
            <CollectionView.ItemsLayout>
                <LinearItemsLayout Orientation="Horizontal"
                                   ItemSpacing="5" />
            </CollectionView.ItemsLayout>
        </CollectionView>
    </DataTemplate>

    <DataTemplate x:Key="WatchProviderTemplate"
                  x:DataType="models:WatchProvider">
        <views:LabeledContentView Label="{Binding Company.Name}"
                                  Padding="5, 0"
                                  WidthRequest="100">
            <TemplatedView.ControlTemplate>
                <ControlTemplate>
                    <StackLayout>
                        <ContentPresenter />

                        <Label Text="{TemplateBinding Label}"
                               HorizontalTextAlignment="Center"
                               MaxLines="2"
                               LineBreakMode="TailTruncation" />
                    </StackLayout>
                </ControlTemplate>
            </TemplatedView.ControlTemplate>

            <views:ImageView HeightRequest="50"
                             WidthRequest="{Binding Height, Source={RelativeSource Self}}"
                             HorizontalOptions="Center">
                <Image Source="{Binding Company.LogoPath}" />
            </views:ImageView>
        </views:LabeledContentView>
    </DataTemplate>

    <DataTemplate x:Key="WatchProviderListTemplate">
        <CollectionView ItemsSource="{Binding}"
                        ItemTemplate="{StaticResource WatchProviderTemplate}"
                        ItemsLayout="HorizontalList"
                        ItemSizingStrategy="{OnPlatform iOS='MeasureFirstItem'}"
                        IsGrouped="True"
                        EmptyView="Not available to stream"
                        HeightRequest="100">
            <CollectionView.GroupHeaderTemplate>
                <DataTemplate>
                    <Label Text="{Binding Name}"
                           VerticalTextAlignment="Center" />
                </DataTemplate>
            </CollectionView.GroupHeaderTemplate>
        </CollectionView>
    </DataTemplate>

    <DataTemplate x:Key="CreditTemplate">
        <views:LabeledContentView Label="{Binding Role}"
                                  Spacing="0"
                                  WidthRequest="100"
                                  Padding="5, 0">
            <TemplatedView.ControlTemplate>
                <ControlTemplate>
                    <StackLayout Spacing="0">
                        <ContentPresenter />

                        <Label Text="{TemplateBinding Label}"
                               HorizontalTextAlignment="Center"
                               LineBreakMode="TailTruncation" />
                    </StackLayout>
                </ControlTemplate>
            </TemplatedView.ControlTemplate>

            <VisualElement.Resources>
                <Style TargetType="Label">
                    <Setter Property="FontSize"
                            Value="Small" />
                </Style>
            </VisualElement.Resources>

            <View.GestureRecognizers>
                <TapGestureRecognizer CommandParameter="{Binding Parent.Content.BindingContext, Source={RelativeSource Self}}">
                    <TapGestureRecognizer.Command>
                        <views:PushPageCommand PageTemplate="{DataTemplate views:PersonInfoPage}" />
                    </TapGestureRecognizer.Command>
                </TapGestureRecognizer>
            </View.GestureRecognizers>

            <ContentView movies:App.AutoWireFromItem="{Binding Person, Source={RelativeSource AncestorType={x:Type models:Credit}}}"
                         ext:ContentView.ItemSource="{Binding}"
                         ext:ContentView.ContentTemplate="{StaticResource CompressedPersonTemplate}" />
        </views:LabeledContentView>
    </DataTemplate>

    <DataTemplate x:Key="CreditListTemplate">
        <CollectionView ItemsSource="{Binding}"
                        ItemTemplate="{StaticResource CreditTemplate}"
                        ItemsLayout="HorizontalList"
                        ItemSizingStrategy="{OnPlatform iOS='MeasureFirstItem'}"
                        HeightRequest="175"
                        EmptyView="{OnPlatform Android='No Credits'}"
                        IsGrouped="True">
            <CollectionView.GroupHeaderTemplate>
                <DataTemplate>
                    <Label Text="{Binding Name}"
                           VerticalTextAlignment="Center" />
                </DataTemplate>
            </CollectionView.GroupHeaderTemplate>
        </CollectionView>
    </DataTemplate>

    <DataTemplate x:Key="CompanyTemplate"
                  x:DataType="models:Company">
        <Frame Padding="10"
               Style="{StaticResource CardStyle}"
               WidthRequest="200">
            <views:LabeledContentView Label="{Binding Name}">
                <VisualElement.Resources>
                    <Style TargetType="Label">
                        <Setter Property="LineBreakMode"
                                Value="MiddleTruncation" />
                        <Setter Property="WidthRequest"
                                Value="0" />
                    </Style>
                </VisualElement.Resources>

                <Image Source="{Binding LogoPath}" />
            </views:LabeledContentView>
        </Frame>
    </DataTemplate>

    <DataTemplate x:Key="CompanyListTemplate">
        <CollectionView ItemsSource="{Binding}"
                        ItemTemplate="{StaticResource CompanyTemplate}"
                        ItemSizingStrategy="MeasureFirstItem"
                        EmptyView="No Companies"
                        HeightRequest="100">
            <CollectionView.ItemsLayout>
                <LinearItemsLayout Orientation="Horizontal"
                                   ItemSpacing="10" />
            </CollectionView.ItemsLayout>
        </CollectionView>
    </DataTemplate>

    <DataTemplate x:Key="InfoSectionTemplate">
        <views:SectionView Title="{Binding Label}"
                           Style="{StaticResource InfoSectionStyle}" />
    </DataTemplate>

    <DataTemplate x:Key="InfoSubsectionTemplate">
        <StackLayout Orientation="Vertical">
            <Label Text="{Binding Label}"
                   Style="{StaticResource ValueDescriptorStyle}" />
            <ContentView Style="{StaticResource InfoSectionStyle}" />
        </StackLayout>
    </DataTemplate>

    <forms:TypeTemplateSelector x:Key="InfoTemplateSelector">
        <forms:TypeTemplateSelector.Templates>
            <forms:TypeDataTemplate Type="{x:Type viewmodels:CollectionViewModel}"
                                    Template="{StaticResource CondensedListTemplate}" />
            <forms:TypeDataTemplate Type="{x:Type ImageSource}"
                                    Template="{StaticResource MediaTemplate}" />
            <forms:TypeDataTemplate Type="{x:Type x:String}"
                                    Template="{StaticResource DefaultTemplate}" />

            <forms:TypeDataTemplate Type="{Static views:InfoPageResources.CreditEnumerableType}"
                                    Template="{StaticResource CreditListTemplate}" />
            <forms:TypeDataTemplate Type="{Static views:InfoPageResources.CompanyEnumerableType}"
                                    Template="{StaticResource CompanyListTemplate}" />
            <forms:TypeDataTemplate Type="{Static views:InfoPageResources.RatingEnumerableType}"
                                    Template="{StaticResource RatingListTemplate}" />
            <forms:TypeDataTemplate Type="{Static views:InfoPageResources.WatchProviderEnumerableType}"
                                    Template="{StaticResource WatchProviderListTemplate}" />
        </forms:TypeTemplateSelector.Templates>
    </forms:TypeTemplateSelector>

    <generic:List x:Key="EmptyRatings"
                  x:TypeArguments="models:Rating" />
    <generic:List x:Key="EmptyWatchProviders"
                  x:TypeArguments="viewmodels:Group(models:WatchProvider)" />
    <generic:List x:Key="EmptyCredits"
                  x:TypeArguments="viewmodels:Group(models:Credit)" />
    <generic:List x:Key="EmptyCompanies"
                  x:TypeArguments="models:Company" />

    <Style x:Key="OptionalLabelStyle"
           TargetType="Label">
        <Setter Property="IsVisible"
                Value="{Binding Text, Source={RelativeSource Self}, Converter={Static forms:FalseIfNullConverter.Instance}}" />
    </Style>

    <Style TargetType="views:LabeledLabel"
           BasedOn="{StaticResource BodyLabel}">
        <Setter Property="IsVisible"
                Value="{Binding Value, Source={RelativeSource Self}, Converter={Static forms:FalseIfNullConverter.Instance}}" />
    </Style>

    <Style x:Key="OptionalLayoutStyle"
           TargetType="{Static views:HideIfNoVisibleChildrenBehavior.ViewLayout}">
        <Style.Behaviors>
            <views:HideIfNoVisibleChildrenBehavior />
        </Style.Behaviors>
    </Style>

    <Style x:Key="OptionalContentViewStyle"
           TargetType="ContentView">
        <Setter Property="IsVisible"
                Value="{Binding Content.IsVisible, Source={RelativeSource Self}, FallbackValue='False'}" />
    </Style>

    <DataTemplate x:Key="DefaultEmptyViewTemplate">
        <Label Text="{Binding Title, Source={RelativeSource AncestorType={x:Type views:SectionView}}, StringFormat='{0} not available'}"
               HorizontalTextAlignment="Center"
               Padding="0, 50" />
    </DataTemplate>

    <Style x:Key="InfoSectionStyle"
           TargetType="ContentView"
           BasedOn="{StaticResource OptionalContentViewStyle}">
        <Setter Property="ext:ContentView.ContentTemplate"
                Value="{StaticResource InfoTemplateSelector}" />
    </Style>

    <Style x:Key="InfoSubsectionStyle"
           TargetType="ContentView"
           BasedOn="{StaticResource InfoSectionStyle}">
        <Setter Property="ext:ContentView.ContentTemplate"
                Value="{StaticResource InfoTemplateSelector}" />
        <Setter Property="ControlTemplate">
            <ControlTemplate>
                <StackLayout Orientation="Vertical">
                    <Label Text="{TemplateBinding Title}"
                           FontSize="Small"
                           Style="{StaticResource ValueDescriptorStyle}" />
                    <ContentPresenter />
                </StackLayout>
            </ControlTemplate>
        </Setter>
    </Style>

    <forms:MediaTemplateSelector x:Key="MediaTemplateSelector">
        <forms:MediaTemplateSelector.ImageTemplate>
            <DataTemplate>
                <Image Source="{Binding}"
                       Aspect="AspectFill" />
            </DataTemplate>
        </forms:MediaTemplateSelector.ImageTemplate>

        <forms:MediaTemplateSelector.VideoTemplate>
            <DataTemplate>
                <WebView Source="{Binding Converter={StaticResource EmbedVideo}}"
                         WidthRequest="177.778"
                         HeightRequest="100"
                         IsFocused="{Binding IsVideoPlaying, Mode=OneWayToSource, Source={RelativeSource AncestorType={x:Type viewmodels:MediaViewModel}}}" />
            </DataTemplate>
        </forms:MediaTemplateSelector.VideoTemplate>
    </forms:MediaTemplateSelector>

    <ControlTemplate x:Key="BasicInfoTemplate">
        <StackLayout BindingContext="{TemplateBinding BindingContext}"
                     Orientation="Vertical"
                     Spacing="25">
            <ContentView HorizontalOptions="Center"
                         IsVisible="{Binding Item, Converter={Static forms:FalseIfNullConverter.Instance}}"
                         Grid.ColumnSpan="2">
                <TemplatedView.ControlTemplate>
                    <templates:QuickActionsTemplate />
                </TemplatedView.ControlTemplate>

                <VisualElement.Triggers>
                    <EventTrigger Event="LayoutChanged">
                        <movies:MoviePaddingTriggerAction />
                    </EventTrigger>

                    <DataTrigger TargetType="VisualElement"
                                 Binding="{Binding Converter={Static forms:GetTypeConverter.Instance}}"
                                 Value="{x:Type viewmodels:TVSeasonViewModel}">
                        <Setter Property="IsVisible"
                                Value="False" />
                    </DataTrigger>

                    <DataTrigger TargetType="VisualElement"
                                 Binding="{Binding Converter={Static forms:GetTypeConverter.Instance}}"
                                 Value="{x:Type viewmodels:TVEpisodeViewModel}">
                        <Setter Property="IsVisible"
                                Value="False" />
                    </DataTrigger>

                    <DataTrigger TargetType="VisualElement"
                                 Binding="{Binding Converter={Static forms:GetTypeConverter.Instance}}"
                                 Value="{x:Type viewmodels:ListViewModel}">
                        <Setter Property="IsVisible"
                                Value="False" />
                    </DataTrigger>

                    <DataTrigger TargetType="VisualElement"
                                 Binding="{Binding Converter={Static forms:GetTypeConverter.Instance}}"
                                 Value="{x:Type viewmodels:NamedListViewModel}">
                        <Setter Property="IsVisible"
                                Value="False" />
                    </DataTrigger>
                </VisualElement.Triggers>
            </ContentView>

            <FlexLayout Direction="Row"
                        AlignItems="Start"
                        JustifyContent="Center"
                        Wrap="Wrap">
                <views:MaxContentView MaxWidth="177.778"
                                      MaxHeight="200"
                                      IsVisible="{Binding Content.IsVisible, Source={RelativeSource Self}}">
                    <views:ImageView ext:ContentView.ItemSource="{Binding PrimaryImagePath}"
                                     ext:ContentView.ContentTemplate="{StaticResource MediaTemplateSelector}"
                                     Style="{StaticResource OptionalContentViewStyle}"
                                     AltText="Content not available"
                                     Margin="0,0,10,10" />
                </views:MaxContentView>

                <ContentPresenter FlexLayout.Grow="1" />
            </FlexLayout>
        </StackLayout>
    </ControlTemplate>
</ResourceDictionary>