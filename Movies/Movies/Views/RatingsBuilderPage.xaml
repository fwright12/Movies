<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core"
             xmlns:models="clr-namespace:Movies.Models"
             xmlns:viewmodels="clr-namespace:Movies.ViewModels"
             xmlns:views="clr-namespace:Movies.Views"
             x:Class="Movies.Views.RatingsBuilderPage"
             BindingContext="{Binding RatingTemplateManager, Source={Static Application.Current}}"
             views:Extensions.DisappearingCommand="{Binding SaveRatingTemplatesCommand, Source={Static Application.Current}}">
    <ContentPage.ToolbarItems>
        <ToolbarItem IsDestructive="True"
                     Command="{Binding RemoveCommand}"
                     CommandParameter="{Binding CurrentItem, Source={x:Reference carouselView}}">
            <ToolbarItem.IconImageSource>
                <FontImageSource Glyph="{OnPlatform iOS=&#xf4c4;, Android=&#xf37f;}"
                                 FontFamily="{StaticResource IoniconsFont}" />
            </ToolbarItem.IconImageSource>
        </ToolbarItem>

        <ToolbarItem Command="{Binding AddCommand}">
            <ToolbarItem.IconImageSource>
                <FontImageSource Glyph="&#xf218;"
                                 Size="Large"
                                 FontFamily="{StaticResource IoniconsFont}" />
            </ToolbarItem.IconImageSource>

            <ToolbarItem.CommandParameter>
                <Binding Path="Items.Count">
                    <Binding.Converter>
                        <viewmodels:NewObjectConverter x:TypeArguments="models:RatingTemplate" />
                    </Binding.Converter>
                </Binding>
            </ToolbarItem.CommandParameter>
        </ToolbarItem>
    </ContentPage.ToolbarItems>

    <VisualElement.Resources>
        <Style x:Key="DoneButtonStyle"
               TargetType="Button">
            <Setter Property="Text"
                    Value="Done" />
            <Setter Property="HorizontalOptions"
                    Value="End" />
            <Setter Property="FontSize"
                    Value="Body" />
            <Setter Property="Command"
                    Value="{views:PopPageCommand Modal=True}" />
        </Style>

        <DataTemplate x:Key="UrlJsExplainerTemplate">
            <ContentPage Title="URL JavaScript"
                         Padding="{StaticResource PagePadding}"
                         ios:Page.ModalPresentationStyle="Automatic">
                <ScrollView Orientation="Vertical">
                    <StackLayout Orientation="Vertical"
                                 Spacing="20">
                        <Button Style="{StaticResource DoneButtonStyle}" />

                        <Label Text="The JavaScript in this section determines the URL from which the score for a movie or show can be accessed. The environment that this JavaScript is executed in will have access to the following object with information about the movie or show, which can be used to construct the URL:" />

                        <Label FontSize="Small"
                               Margin="10,0,0,0">
                            <Label.Text>
                                item: {
    title: string
    year: number
    id: {
        tmdb: number
        imdb: string
        wikidata: string
        facebook: string
        instagram: string
        twitter: string
    }
}
                            </Label.Text>
                        </Label>

                        <Label Text="When executed in a REPL enivornment, the JavaScript entered here should evaluate to a single string containing the URL (the final statement should NOT contain the 'return' keyword)." />

                        <Label Text="Alternatively, an array of strings representing multiple URLs can be returned. In this event, the JavaScript entered in the 'Score JavaScript' section will be executed against each URL, in order, until a valid value is successfully obtained." />
                    </StackLayout>
                </ScrollView>
            </ContentPage>
        </DataTemplate>

        <DataTemplate x:Key="ScoreJsExplainerTemplate">
            <ContentPage Title="Score JavaScript"
                         Padding="{StaticResource PagePadding}"
                         ios:Page.ModalPresentationStyle="Automatic">
                <ScrollView Orientation="Vertical">
                    <StackLayout Orientation="Vertical">
                        <Button Style="{StaticResource DoneButtonStyle}" />

                        <Label Text="The result of evaluting this JavaScript in a REPL environment containing the target webpage should be a single string representing the value to be displayed as the score for a movie or show." />
                    </StackLayout>
                </ScrollView>
            </ContentPage>
        </DataTemplate>
    </VisualElement.Resources>

    <StackLayout Padding="{StaticResource PagePadding}">
        <IndicatorView x:Name="indicatorView"
                       IndicatorColor="{AppThemeBinding Light={StaticResource LightSecondaryBackground}, Dark={StaticResource DarkSecondaryBackground}}"
                       SelectedIndicatorColor="{StaticResource Primary}" />

        <CarouselView x:Name="carouselView"
                      ItemsSource="{Binding Items}"
                      CurrentItem="{Binding SelectedItem}"
                      IndicatorView="indicatorView"
                      Loop="false">
            <CarouselView.ItemTemplate>
                <DataTemplate x:DataType="models:RatingTemplate">
                    <ScrollView Orientation="Vertical">
                        <StackLayout>
                            <StackLayout.Resources>
                                <Style TargetType="Entry">
                                    <Setter Property="WidthRequest"
                                            Value="0" />
                                    <Setter Property="HorizontalOptions"
                                            Value="FillAndExpand" />
                                </Style>

                                <Style TargetType="Editor">
                                    <Setter Property="FontSize"
                                            Value="Small" />
                                    <Setter Property="HeightRequest"
                                            Value="400" />
                                    <Setter Property="BackgroundColor"
                                            Value="{AppThemeBinding Light={StaticResource LightSecondaryBackground}, Dark={StaticResource DarkSecondaryBackground}}" />
                                </Style>

                                <Style x:Key="InfoButtonStyle"
                                       TargetType="ImageButton">
                                    <Setter Property="BackgroundColor"
                                            Value="Transparent" />

                                    <Setter Property="Source">
                                        <FontImageSource Glyph="&#9432;"
                                                         FontFamily="{StaticResource IoniconsFont}"
                                                         Size="Large"
                                                         Color="{StaticResource Primary}" />
                                    </Setter>
                                </Style>

                                <Style x:Key="SpacerStyle"
                                       TargetType="BoxView">
                                    <Setter Property="BackgroundColor"
                                            Value="Transparent" />
                                    <Setter Property="FlexLayout.Basis"
                                            Value="5" />
                                </Style>
                            </StackLayout.Resources>

                            <FlexLayout Direction="Row"
                                        AlignContent="Center">
                                <Label Text="Name:"
                                       VerticalOptions="Center" />
                                <BoxView Style="{StaticResource SpacerStyle}" />
                                <Entry VerticalOptions="Center"
                                       Text="{Binding Name, Mode=TwoWay}"
                                       FlexLayout.Grow="1" />
                            </FlexLayout>

                            <FlexLayout Direction="Row"
                                        AlignContent="Center">
                                <Label Text="Logo URL:"
                                       VerticalOptions="Center" />
                                <BoxView Style="{StaticResource SpacerStyle}" />
                                <Entry VerticalOptions="Center"
                                       Text="{Binding LogoURL, Mode=TwoWay}"
                                       Placeholder="https://www.example.com/logo.png"
                                       FlexLayout.Grow="1" />
                            </FlexLayout>

                            <FlexLayout Direction="Row"
                                        AlignContent="Center">
                                <Label Text="URL JavaScript:" />
                                <BoxView Style="{StaticResource SpacerStyle}" />
                                <ImageButton Style="{StaticResource InfoButtonStyle}"
                                             Command="{views:PushPageCommand PageTemplate={StaticResource 
                                        UrlJsExplainerTemplate}, Modal=True}" />
                            </FlexLayout>
                            <Editor Text="{Binding URLJavaScipt, Mode=TwoWay}">
                                <Editor.Placeholder>
                                    title = item.title.replaceAll(' ', '_').toLowerCase();
`https://www.website.com/movie/${title}`;
                                </Editor.Placeholder>
                            </Editor>

                            <FlexLayout Direction="Row"
                                        AlignContent="Center">
                                <Label Text="Score Javascript:" />
                                <BoxView Style="{StaticResource SpacerStyle}" />
                                <ImageButton Style="{StaticResource InfoButtonStyle}"
                                             Command="{views:PushPageCommand PageTemplate={StaticResource ScoreJsExplainerTemplate}, Modal=True}" />
                            </FlexLayout>
                            <Editor Text="{Binding ScoreJavaScript, Mode=TwoWay}"
                                    Placeholder="document.getElementById('score').textContent" />
                        </StackLayout>
                    </ScrollView>
                </DataTemplate>
            </CarouselView.ItemTemplate>
        </CarouselView>
    </StackLayout>
</ContentPage>