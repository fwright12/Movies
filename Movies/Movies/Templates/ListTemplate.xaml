<?xml version="1.0" encoding="UTF-8"?>
<ControlTemplate xmlns="http://xamarin.com/schemas/2014/forms"
                 xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                 xmlns:sys="clr-namespace:System;assembly=mscorlib"
                 xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib"
                 xmlns:ext="clr-namespace:Xamarin.Forms.Extensions;assembly=Xamarin.Forms.Extensions"
                 xmlns:forms="clr-namespace:Xamarin.Forms;assembly=Xamarin.Forms.Extensions"
                 xmlns:movies="clr-namespace:Movies"
                 xmlns:views="clr-namespace:Movies.Views"
                 xmlns:viewmodels="clr-namespace:Movies.ViewModels"
                 xmlns:models="clr-namespace:Movies.Models"
                 x:Class="Movies.ListTemplate">
    <forms:DrawerView x:Name="root"
                      BackgroundColor="{Binding BackgroundColor, Source={RelativeSource AncestorType={x:Type Page}}}"
                      BindingContext="{TemplateBinding BindingContext}"
                      Drawer="{Binding Filter}">
        <forms:DrawerView.DrawerTemplate>
            <DataTemplate>
                <StackLayout Orientation="Vertical"
                             BackgroundColor="{AppThemeBinding Light={StaticResource LightSecondaryBackground}, Dark={StaticResource DarkSecondaryBackground}}">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup>
                            <VisualState Name="{Static forms:DrawerView+VisualStates.Closed}">
                                <VisualState.Setters>
                                    <Setter TargetName="scroll"
                                            Property="ScrollView.Orientation"
                                            Value="Neither" />
                                    <Setter Property="HeightRequest"
                                            Value="100" />
                                    <!--<MultiBinding>
                                            <MultiBinding.Converter>
                                                <views:ArithmeticConverter Operation="Add" />
                                            </MultiBinding.Converter>

                                            <Binding Path="Y"
                                                     Source="{x:Reference minheight}" />
                                            <Binding Path="Child.Height">
                                                <Binding.Source>
                                                    <views:ChildViewModel Layout="{x:Reference minheight}"
                                                                          Index="0" />
                                                </Binding.Source>
                                            </Binding>
                                        </MultiBinding>
                                    </Setter>-->
                                </VisualState.Setters>
                            </VisualState>

                            <VisualState Name="{Static forms:DrawerView+VisualStates.Open}">
                                <VisualState.Setters>
                                    <Setter TargetName="scroll"
                                            Property="ScrollView.Orientation"
                                            Value="Vertical" />
                                    <Setter Property="HeightRequest"
                                            Value="500" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>

                    <StackLayout Orientation="Horizontal">
                        <FlexLayout Direction="Row"
                                    Wrap="Wrap"
                                    BindingContext="{Binding Constraints}"
                                    BindableLayout.ItemsSource="{Binding Expression}"
                                    BindableLayout.ItemTemplateSelector="{StaticResource BooleanTemplateSelector}"
                                    BindableLayout.EmptyView="No filters" />

                        <Button Text="filter"
                                Command="{Binding Toggle, Source={RelativeSource AncestorType={x:Type forms:DrawerView}}}"
                                HorizontalOptions="End"
                                VerticalOptions="Start" />
                    </StackLayout>

                    <ScrollView x:Name="scroll">
                        <StackLayout Orientation="Vertical"
                                     Spacing="10"
                                     BindableLayout.ItemsSource="{Binding Selectors}"
                                     BindableLayout.ItemTemplate="{StaticResource ConstraintTemplate}"
                                     x:Name="parent">
                            <Layout.Padding>
                                <MultiBinding Converter="{Static forms:ThicknessConverter.Instance}"
                                              ConverterParameter="horizontal, vertical">
                                    <Binding Source="{StaticResource PagePadding}" />
                                    <Binding Path="CornerRadius"
                                             Source="{RelativeSource AncestorType={x:Type Frame}}"
                                             FallbackValue="{StaticResource PagePadding}" />
                                </MultiBinding>
                            </Layout.Padding>
                        </StackLayout>
                    </ScrollView>
                </StackLayout>
            </DataTemplate>
        </forms:DrawerView.DrawerTemplate>

        <VisualElement.Resources>
            <Style TargetType="views:SectionView"
                   BasedOn="{StaticResource DefaultSectionViewStyle}">
                <Setter Property="Title"
                        Value="{Binding Name}" />
                <Setter Property="views:SectionView.Header">
                    <DataTemplate>
                        <ContentView>
                            <Button Text="clear"
                                    HorizontalOptions="End"
                                    Command="{Binding ClearCommand, Source={RelativeSource AncestorType={x:Type viewmodels:FilterViewModel}}, Mode=OneTime}" />
                        </ContentView>
                    </DataTemplate>
                </Setter>
            </Style>

            <DataTemplate x:Key="RoundedTextTemplate">
                <Frame Padding="10, 8"
                       Margin="2, 0"
                       BorderColor="{Binding TextColor, Source={x:Reference Option}}"
                       Style="{StaticResource RoundedFrameStyle}">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup Name="CommonStates">
                            <VisualState Name="{Static VisualStateManager+CommonStates.Normal}" />
                            <VisualState Name="{Static VisualStateManager+CommonStates.Selected}">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor"
                                            Value="{StaticResource Primary}" />
                                    <Setter Property="BorderColor"
                                            Value="{Binding BackgroundColor, Source={RelativeSource Self}}" />

                                    <Setter TargetName="Option"
                                            Property="Label.TextColor"
                                            Value="{StaticResource DarkPrimaryText}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>

                    <Label x:Name="Option"
                           Text="{Binding}" />
                </Frame>
            </DataTemplate>

            <Style x:Key="StringSelectorStyle"
                   TargetType="FlexLayout">
                <Setter Property="Wrap"
                        Value="Wrap" />
                <Setter Property="forms:Selection.SelectionMode"
                        Value="Multiple" />
                <Setter Property="forms:Selection.SelectedItems"
                        Value="{Binding SelectedOptions}" />
                <Setter Property="BindableLayout.ItemsSource"
                        Value="{Binding Options}" />
                <Setter Property="BindableLayout.ItemTemplate"
                        Value="{StaticResource RoundedTextTemplate}" />
            </Style>

            <ControlTemplate x:Key="PropertyLabelTemplate">
                <StackLayout Orientation="Horizontal"
                             BindingContext="{TemplateBinding BindingContext}">
                    <Label Text="{Binding Name, StringFormat='{0}:'}" />

                    <ContentPresenter />
                </StackLayout>
            </ControlTemplate>

            <DataTemplate x:Key="LiteralTemplate">
                <Frame CornerRadius="10"
                       BorderColor="{StaticResource Primary}"
                       Padding="2">
                    <TemplatedView.ControlTemplate>
                        <Binding Path="SharedProperty.Property.Length"
                                 Source="{RelativeSource AncestorType={x:Type viewmodels:BooleanExpressionViewModel}}">
                            <Binding.Converter>
                                <forms:BoolToObjectConverter FalseObject="{StaticResource PropertyLabelTemplate}" />
                            </Binding.Converter>

                            <Binding.ConverterParameter>
                                <x:Int32>0</x:Int32>
                            </Binding.ConverterParameter>
                        </Binding>
                    </TemplatedView.ControlTemplate>

                    <StackLayout Orientation="Horizontal"
                                 BindingContext="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:ConstraintViewModel}}}">
                        <Label Text="{Binding Comparison}" />

                        <Label Text="{Binding Value}" />

                        <Button Text="x"
                                HeightRequest="0"
                                Command="{Binding RemoveConstraintCommand, Source={RelativeSource AncestorType={x:Type viewmodels:BooleanExpressionViewModel}}, Mode=OneTime}"
                                CommandParameter="{Binding}" />
                    </StackLayout>
                </Frame>
            </DataTemplate>

            <DataTemplate x:Key="SetLiteralTemplate">
                <Label Text="{Binding Value, StringFormat='{0}, '}" />
            </DataTemplate>

            <DataTemplate x:Key="SetTemplate">
                <ContentView ext:ContentView.ItemSource="{Binding Value}"
                             ext:ContentView.ContentTemplate="{StaticResource BooleanExpressionTemplate}" />
            </DataTemplate>

            <DataTemplate x:Key="BooleanExpressionTemplate">
                <StackLayout Orientation="Horizontal">
                    <Label Text="{Binding SharedProperty.Property, StringFormat='{0}:'}" />

                    <StackLayout Orientation="Horizontal"
                                 BindableLayout.ItemsSource="{Binding Expression}"
                                 BindableLayout.ItemTemplateSelector="{StaticResource BooleanTemplateSelector}" />
                </StackLayout>
            </DataTemplate>

            <DataTemplate x:Key="PresetDisplayTemplate">
                <Label Text="{Binding Text}" />
            </DataTemplate>

            <forms:TypeTemplateSelector x:Key="BooleanTemplateSelector">
                <forms:TypeTemplateSelector.Templates>
                    <forms:TypeDataTemplate Type="{x:Type viewmodels:ConstraintViewModel}"
                                            Template="{StaticResource LiteralTemplate}" />
                    <forms:TypeDataTemplate Type="{x:Type viewmodels:Preset}"
                                            Template="{StaticResource PresetDisplayTemplate}" />
                    <forms:TypeDataTemplate Type="{x:Type viewmodels:BooleanExpressionViewModel}"
                                            Template="{StaticResource BooleanExpressionTemplate}" />
                </forms:TypeTemplateSelector.Templates>
            </forms:TypeTemplateSelector>

            <forms:TypeTemplateSelector x:Key="SetTemplateSelector"
                                        DefaultTemplate="{StaticResource BooleanTemplateSelector}">
                <forms:TypeTemplateSelector.Templates>
                </forms:TypeTemplateSelector.Templates>
            </forms:TypeTemplateSelector>

            <DataTemplate x:Key="SearchTemplate">
                <StackLayout Orientation="Horizontal">
                    <SearchBar Text="{Binding Query, Mode=TwoWay}"
                               SearchCommand="{Binding SearchCommand}"
                               TextColor="{AppThemeBinding Light={StaticResource LightPrimaryText}, Dark={StaticResource DarkPrimaryText}}"
                               Placeholder="{Binding Placeholder}"
                               PlaceholderColor="{AppThemeBinding Light={StaticResource LightSecondaryText}, Dark={StaticResource DarkSecondaryText}}"
                               CancelButtonColor="{StaticResource Primary}" />
                </StackLayout>
            </DataTemplate>

            <DataTemplate x:Key="ItemTypeOptionsTemplate">
                <FlexLayout Style="{StaticResource StringSelectorStyle}" />
            </DataTemplate>

            <ControlTemplate x:Key="CompareControlTemplate">
                <StackLayout BindingContext="{TemplateBinding BindingContext}"
                             Orientation="Horizontal">
                    <FlexLayout Direction="Column"
                                forms:Selection.SelectionMode="MandatorySingle"
                                forms:Selection.SelectedIndices="{Binding Constraint.Comparison, Converter={Static viewmodels:ComparisonConverter.Instance}}"
                                BindableLayout.ItemTemplate="{StaticResource RoundedTextTemplate}">
                        <BindableLayout.ItemsSource>
                            <x:Array Type="{x:Type x:String}">
                                <x:String>Under</x:String>
                                <x:String>Exactly</x:String>
                                <x:String>Over</x:String>
                            </x:Array>
                        </BindableLayout.ItemsSource>

                        <VisualElement.Triggers>
                            <DataTrigger TargetType="FlexLayout"
                                         Binding="{Binding Value, Converter={Static forms:GetTypeConverter.Instance}}"
                                         Value="{x:Type sys:DateTime}">
                                <Setter Property="BindableLayout.ItemsSource">
                                    <x:Array Type="{x:Type x:String}">
                                        <x:String>Before</x:String>
                                        <x:String>Exactly</x:String>
                                        <x:String>After</x:String>
                                    </x:Array>
                                </Setter>
                            </DataTrigger>
                        </VisualElement.Triggers>
                    </FlexLayout>

                    <ContentPresenter />
                </StackLayout>
            </ControlTemplate>

            <DataTemplate x:Key="ConstraintTemplate">
                <views:SectionView>
                    <StackLayout Orientation="Vertical">
                        <StackLayout Orientation="Vertical"
                                     BindableLayout.ItemsSource="{Binding Property.Values.Presets}">
                            <BindableLayout.ItemTemplate>
                                <DataTemplate x:DataType="viewmodels:Preset">
                                    <views:LabeledContentView Label="{Binding Text}"
                                                              LabelPosition="Left">
                                        <CheckBox IsChecked="{Binding IsActive}" />
                                    </views:LabeledContentView>
                                </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </StackLayout>

                        <StackLayout Orientation="Vertical"
                                     BindableLayout.ItemsSource="{Binding Property.Values.Filters}"
                                     BindableLayout.ItemTemplateSelector="{StaticResource FilterTemplateSelector}" />

                        <ContentView ext:ContentView.ItemSource="{Binding}"
                                     ext:ContentView.ContentTemplate="{StaticResource ValueTemplateSelector}"
                                     HorizontalOptions="FillAndExpand"
                                     CompressedLayout.IsHeadless="False">
                            <VisualElement.Triggers>
                                <DataTrigger TargetType="ContentView"
                                             Binding="{Binding Comparable, FallbackValue='False'}"
                                             Value="True">
                                    <Setter Property="ControlTemplate"
                                            Value="{StaticResource CompareControlTemplate}" />
                                </DataTrigger>
                            </VisualElement.Triggers>
                        </ContentView>
                    </StackLayout>
                </views:SectionView>
            </DataTemplate>

            <forms:TypeTemplateSelector x:Key="FilterTemplateSelector">
                <forms:TypeTemplateSelector.Templates>
                    <forms:TypeDataTemplate Type="{x:Type viewmodels:ItemTypeFilterViewModel}"
                                            Template="{StaticResource ItemTypeOptionsTemplate}" />
                    <forms:TypeDataTemplate Type="{x:Type viewmodels:SearchFilterViewModel}"
                                            Template="{StaticResource SearchTemplate}" />
                </forms:TypeTemplateSelector.Templates>
            </forms:TypeTemplateSelector>

            <DataTemplate x:Key="NumberPickerTemplate">
                <views:NumberPicker Value="{Binding Constraint.Value}"
                                    Lower="{Binding Property.Values.Low}"
                                    Upper="{Binding Property.Values.High}"
                                    AbsoluteMin="{Binding Property.Values.LowerBound}"
                                    AbsoluteMax="{Binding Property.Values.UpperBound}"
                                    Step="{Binding Property.Values.Step, FallbackValue=1}" />
            </DataTemplate>

            <DataTemplate x:Key="DateTimePickerTemplate">
                <StackLayout Orientation="Vertical">
                    <VisualElement.Resources>
                        <Style x:Key="MonthPickerStyle"
                               TargetType="views:NumberPicker">
                            <Setter Property="Value"
                                    Value="{Binding Month}" />
                            <Setter Property="Lower"
                                    Value="0" />
                            <Setter Property="Upper"
                                    Value="12" />
                        </Style>

                        <Style x:Key="DayPickerStyle"
                               TargetType="views:NumberPicker">
                            <Setter Property="Value"
                                    Value="{Binding Day}" />
                            <Setter Property="Lower"
                                    Value="0" />
                            <Setter Property="Upper"
                                    Value="{Binding DaysInMonth}" />
                        </Style>
                    </VisualElement.Resources>

                    <views:NumberPicker x:Name="picker"
                                        Lower="{Binding Min.Year, Source={RelativeSource AncestorType={x:Type viewmodels:FilterViewModel}}, Mode=TwoWay}"
                                        Upper="{Binding Max.Year, Source={RelativeSource AncestorType={x:Type viewmodels:FilterViewModel}}, Mode=TwoWay}"
                                        Value="{Binding Year}"
                                        Step="1">
                        <BindableObject.BindingContext>
                            <views:DateTimeViewModel />
                        </BindableObject.BindingContext>
                    </views:NumberPicker>

                    <DatePicker MinimumDate="{Static sys:DateTime.MinValue}"
                                Date="{Binding Mode=TwoWay}" />
                </StackLayout>
            </DataTemplate>

            <DataTemplate x:Key="WatchProviderListTemplate">
                <CollectionView ItemsSource="{Binding Property.Values.Values}"
                                SelectedItems="{Binding Constraint.Value}"
                                ItemsLayout="HorizontalGrid, 3"
                                ItemSizingStrategy="MeasureFirstItem"
                                SelectionMode="Multiple"
                                HeightRequest="150">
                    <ItemsView.ItemTemplate>
                        <DataTemplate>
                            <Image Source="{Binding Company.LogoPath}"
                                   WidthRequest="50"
                                   HeightRequest="50">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup>
                                        <VisualState Name="Normal">
                                            <VisualState.Setters>
                                                <Setter Property="Opacity"
                                                        Value="0.5" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState Name="Selected">
                                            <VisualState.Setters>
                                                <Setter Property="Opacity"
                                                        Value="1" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Image>
                        </DataTemplate>
                    </ItemsView.ItemTemplate>
                </CollectionView>
            </DataTemplate>

            <DataTemplate x:Key="PersonListTemplate">
                <CollectionView ItemsSource="{Binding Property.Values.Values}"
                                ItemTemplate="{StaticResource CompressedPersonTemplate}"
                                ItemsLayout="HorizontalList"
                                ItemSizingStrategy="MeasureFirstItem"
                                SelectionMode="Single"
                                SelectedItem="{Binding Constraint.Value}"
                                HeightRequest="100" />
            </DataTemplate>

            <DataTemplate x:Key="StringListTemplate">
                <ContentView CompressedLayout.IsHeadless="False">
                    <VisualElement.Triggers>
                        <DataTrigger TargetType="ContentView"
                                     Binding="{Binding Property.Values.Filters.Count}"
                                     Value="0">
                            <Setter Property="Content">
                                <FlexLayout BindableLayout.ItemsSource="{Binding Property.Values.Values}"
                                            forms:Selection.SelectedItems="{Binding Constraint.Value}"
                                            Style="{StaticResource StringSelectorStyle}" />
                            </Setter>
                        </DataTrigger>
                    </VisualElement.Triggers>

                    <CollectionView ItemsSource="{Binding Property.Values.Values}"
                                    SelectionMode="Single"
                                    SelectedItem="{Binding Constraint.Value}"
                                    HeightRequest="100" />
                </ContentView>
            </DataTemplate>

            <forms:TypeTemplateSelector x:Key="ValueTemplateSelector">
                <forms:TypeTemplateSelector.Templates>
                    <forms:TypeDataTemplate Type="{Static viewmodels:CollectionViewModel.NumberPickerType}"
                                            Template="{StaticResource NumberPickerTemplate}" />
                    <forms:TypeDataTemplate Type="{Static viewmodels:CollectionViewModel.DateTimePickerType}"
                                            Template="{StaticResource DateTimePickerTemplate}" />
                    <forms:TypeDataTemplate Type="{Static viewmodels:CollectionViewModel.WatchProviderListType}"
                                            Template="{StaticResource WatchProviderListTemplate}" />
                    <forms:TypeDataTemplate Type="{Static viewmodels:CollectionViewModel.PersonListType}"
                                            Template="{StaticResource PersonListTemplate}" />
                    <forms:TypeDataTemplate Type="{Static viewmodels:CollectionViewModel.StringListType}"
                                            Template="{StaticResource StringListTemplate}" />
                </forms:TypeTemplateSelector.Templates>
            </forms:TypeTemplateSelector>

            <Style Class="EditingOnly"
                   TargetType="VisualElement"
                   ApplyToDerivedTypes="True"
                   BasedOn="{StaticResource EditingOnlyStyle}" />
        </VisualElement.Resources>

        <!--<VisualElement.Triggers>
            <DataTrigger TargetType="forms:DrawerView"
                         Binding="{Binding Editing, FallbackValue='False'}"
                         Value="False">
                <Setter Property="Drawer"
                        Value="{Binding Filters}" />
                <Setter Property="DrawerTemplate">
                    <views:FilterTemplate />
                </Setter>
            </DataTrigger>

            <DataTrigger TargetType="forms:DrawerView"
                         Binding="{Binding Editing}"
                         Value="True">
                <Setter Property="Drawer"
                        Value="test" />
                <Setter Property="DrawerTemplate"
                        Value="{StaticResource CollectionViewActionsTemplate}" />
            </DataTrigger>
        </VisualElement.Triggers>-->

        <Grid RowDefinitions="*, Auto"
              RowSpacing="0">
            <CollectionView x:Name="collectionView"
                            ext:VisualStateManager.VisualState="{Binding ListLayout}"
                            ItemsSource="{Binding Items}"
                            views:CollectionViewExt.IsEditing="{Binding Editing}"
                            SelectionMode="{Binding Editing, Converter={Static views:BoolToSelectionModeConverter.Instance}}"
                            RemainingItemsThresholdReachedCommand="{Binding LoadMoreCommand}"
                            RemainingItemsThreshold="0"
                            VerticalScrollBarVisibility="Default"
                            Grid.Row="0">
                <VisualElement.Resources>
                    <ResourceDictionary>
                        <ResourceDictionary.MergedDictionaries>
                            <views:InfoPageResources />
                        </ResourceDictionary.MergedDictionaries>
                    </ResourceDictionary>

                    <ControlTemplate x:Key="ListSwipeTemplate">
                        <SwipeView>
                            <SwipeView.RightItems>
                                <SwipeItems>
                                    <SwipeItem Text="Delete"
                                               BackgroundColor="Red"
                                               Command="{Binding RemoveCommand, Source={RelativeSource AncestorType={x:Type viewmodels:ListViewModel}}, Mode=OneTime}"
                                               CommandParameter="{TemplateBinding BindingContext.Item}" />
                                </SwipeItems>
                            </SwipeView.RightItems>

                            <ContentPresenter />
                        </SwipeView>
                    </ControlTemplate>

                    <ControlTemplate x:Key="EditGridTemplate">
                        <AbsoluteLayout InputTransparent="True">
                            <ContentPresenter AbsoluteLayout.LayoutBounds="0.5, 0.5, -1, -1"
                                              AbsoluteLayout.LayoutFlags="PositionProportional" />

                            <CheckBox IsChecked="{TemplateBinding Selected, Mode=TwoWay}"
                                      AbsoluteLayout.LayoutBounds="1, 0, -1, -1"
                                      AbsoluteLayout.LayoutFlags="PositionProportional" />
                        </AbsoluteLayout>
                    </ControlTemplate>

                    <views:EditDataTemplateSelector x:Key="EditListSelector"
                                                    Main="{StaticResource ListSelector}"
                                                    SwipeTemplate="{StaticResource ListSwipeTemplate}"
                                                    EditTemplate="{OnPlatform iOS={StaticResource iOSEditListTemplate}, Android={StaticResource AndroidEditListTemplate}}" />

                    <views:EditDataTemplateSelector x:Key="EditGridSelector"
                                                    Main="{StaticResource UniformGridTemplate}"
                                                    EditTemplate="{StaticResource EditGridTemplate}" />
                </VisualElement.Resources>

                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup>
                        <VisualState Name="List">
                            <VisualState.Setters>
                                <Setter Property="ItemTemplate">
                                    <Binding Path="Editable">
                                        <Binding.Converter>
                                            <forms:BoolToObjectConverter TrueObject="{StaticResource EditListSelector}"
                                                                         FalseObject="{StaticResource ListSelector}" />
                                        </Binding.Converter>
                                    </Binding>
                                </Setter>

                                <Setter Property="ItemsLayout">
                                    <LinearItemsLayout Orientation="Vertical"
                                                       ItemSpacing="5" />
                                </Setter>

                                <Setter Property="ItemSizingStrategy"
                                        Value="MeasureAllItems" />
                            </VisualState.Setters>
                        </VisualState>

                        <VisualState Name="Grid">
                            <VisualState.Setters>
                                <Setter Property="ItemTemplate">
                                    <Binding Path="Editable">
                                        <Binding.Converter>
                                            <forms:BoolToObjectConverter TrueObject="{StaticResource EditGridSelector}"
                                                                         FalseObject="{StaticResource UniformGridTemplate}" />
                                        </Binding.Converter>
                                    </Binding>
                                </Setter>

                                <Setter Property="ItemsLayout">
                                    <GridItemsLayout Orientation="Vertical"
                                                     Span="2"
                                                     HorizontalItemSpacing="5"
                                                     VerticalItemSpacing="5" />
                                </Setter>

                                <Setter Property="ItemSizingStrategy"
                                        Value="MeasureFirstItem" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>

                <VisualElement.Behaviors>
                    <views:ShowFiltersBehavior />
                </VisualElement.Behaviors>

                <forms:Ads.CollectionAds>
                    <forms:AdInfo Frequency="10"
                                  Template="{StaticResource InlineBannerTemplate}" />
                </forms:Ads.CollectionAds>

                <CollectionView.Header>
                    <StackLayout Orientation="Vertical"
                                 Spacing="20"
                                 Padding="10,0"
                                 views:Extensions.Batch="{OnPlatform iOS={Binding BindingContext, Source={x:Reference root}}}">
                        <forms:AdView Style="{StaticResource BannerAdStyle}"
                                      AdUnitID="{Static movies:App.TopBannerAdUnitID}" />

                        <FlexLayout Direction="Row"
                                    Style="{StaticResource EditingOnlyStyle}">
                            <Label Text="Name: " />

                            <ScrollView Orientation="{OnPlatform iOS='Neither'}"
                                        FlexLayout.Grow="1">
                                <Entry Text="{Binding Name, Mode=TwoWay}"
                                       ReturnType="Done" />
                            </ScrollView>
                        </FlexLayout>

                        <ContentView ControlTemplate="{StaticResource BasicInfoTemplate}"
                                     IsVisible="{TemplateBinding Content, Converter={Static forms:FalseIfNullConverter.Instance}}"
                                     CompressedLayout.IsHeadless="False">
                            <ContentPresenter />
                        </ContentView>

                        <views:SectionView Title="{Binding DescriptionLabel}"
                                           ext:ContentView.ItemSource="{Binding Item.Description}"
                                           Style="{StaticResource OptionalContentViewStyle}"
                                           StyleClass="EditingOnly"
                                           views:EditView1.IsEditing="{Binding Editing}"
                                           views:EditView1.Display="{StaticResource InfoTemplateSelector}">
                            <views:EditView1.Edit>
                                <Frame BorderColor="LightGray">
                                    <Editor Text="{Binding Item.Description, Mode=TwoWay}"
                                            TextColor="{AppThemeBinding Light={StaticResource LightPrimaryText}, Dark={StaticResource DarkPrimaryText}}"
                                            HeightRequest="200"
                                            Placeholder="Enter a description..." />
                                </Frame>
                            </views:EditView1.Edit>
                        </views:SectionView>

                        <views:SectionView Title="Sync"
                                           Style="{StaticResource CardStyle}"
                                           Padding="{StaticResource PagePadding}"
                                           IsVisible="{Binding Editing, FallbackValue='False'}">
                            <StackLayout Orientation="Vertical">
                                <StackLayout Orientation="Vertical"
                                             BindableLayout.ItemsSource="{Binding SyncWith}"
                                             Spacing="{Binding Spacing, Source={RelativeSource AncestorType={x:Type StackLayout}}}">
                                    <BindableLayout.ItemTemplate>
                                        <DataTemplate>
                                            <FlexLayout Direction="Row"
                                                        JustifyContent="SpaceBetween">
                                                <Label Text="{Binding Provider.Name}" />

                                                <Button Text="Remove"
                                                        TextColor="Red"
                                                        IsVisible="{Binding IsEnabled, Source={RelativeSource Self}}"
                                                        Command="{Binding RemoveSyncCommand, Source={RelativeSource AncestorType={x:Type viewmodels:ListViewModel}}}"
                                                        CommandParameter="{Binding}" />
                                            </FlexLayout>
                                        </DataTemplate>
                                    </BindableLayout.ItemTemplate>
                                </StackLayout>

                                <Button Text="+ Add Source"
                                        HorizontalOptions="Start"
                                        IsVisible="{Binding IsEnabled, Source={RelativeSource Self}}"
                                        Command="{Binding AddSyncSourceCommand, Source={Static Application.Current}}"
                                        CommandParameter="{Binding}" />
                            </StackLayout>
                        </views:SectionView>

                        <Button Text="Delete List"
                                TextColor="Red"
                                HorizontalOptions="Center"
                                Command="{Binding DeleteListCommand, Source={Static Application.Current}}"
                                CommandParameter="{Binding}"
                                Style="{StaticResource EditingOnlyStyle}" />

                        <Grid x:Name="sort"
                              ColumnDefinitions="*, Auto"
                              Padding="0,0,0,5">
                            <VisualElement.Resources>
                                <Style x:Key="SquareButtonStyle"
                                       TargetType="Button">
                                    <Setter Property="WidthRequest"
                                            Value="{Binding Height, Source={RelativeSource Self}}" />
                                </Style>
                            </VisualElement.Resources>

                            <Label Text="{Binding ListLabel}"
                                   IsVisible="{Binding Text, Source={RelativeSource Self}, Converter={Static forms:FalseIfNullConverter.Instance}}"
                                   FontSize="Large"
                                   Style="{StaticResource ValueDescriptorStyle}"
                                   VerticalOptions="Center"
                                   Grid.Column="0" />

                            <FlexLayout Direction="Row"
                                        Grid.Column="0">
                                <VisualElement.Triggers>
                                    <DataTrigger TargetType="VisualElement"
                                                 Binding="{Binding Items.Count, FallbackValue=0}"
                                                 Value="-1">
                                        <Setter Property="IsVisible"
                                                Value="False" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="VisualElement"
                                                 Binding="{Binding SortOptions.Count, FallbackValue=0}"
                                                 Value="0">
                                        <Setter Property="IsVisible"
                                                Value="False" />
                                    </DataTrigger>
                                </VisualElement.Triggers>

                                <Label Text="Sort: "
                                       FontSize="Default" />

                                <Button Command="{Binding ToggleSortOrder}"
                                        FontFamily="{StaticResource IoniconsFont}"
                                        FontSize="Title">
                                    <Button.Text>
                                        <Binding Path="SortAscending">
                                            <Binding.Converter>
                                                <forms:BoolToObjectConverter TrueObject="&#xf10e;"
                                                                             FalseObject="&#xf105;" />
                                            </Binding.Converter>
                                        </Binding>
                                    </Button.Text>
                                </Button>

                                <Picker BindingContext="{Binding}"
                                        x:DataType="{x:Null}"
                                        ItemsSource="{Binding SortOptions}"
                                        SelectedItem="{Binding SortBy}"
                                        BackgroundColor="Transparent"
                                        TextColor="{StaticResource Primary}"
                                        Title="{Binding SortOptions[0]}"
                                        TitleColor="{Binding TextColor, Source={RelativeSource Self}}"
                                        WidthRequest="0"
                                        FlexLayout.Grow="1"
                                        FlexLayout.Shrink="0" />
                            </FlexLayout>

                            <StackLayout x:Name="liststates"
                                         Orientation="Horizontal"
                                         forms:Selection.SelectionMode="Single"
                                         forms:Selection.SelectedItems="{Binding ListLayout, Mode=TwoWay, Converter={Static viewmodels:SingleItemListConverter.Instance}}"
                                         x:DataType="{x:Null}"
                                         Spacing="0"
                                         Grid.Column="1">
                                <VisualElement.Resources>
                                    <Style TargetType="Button"
                                           BasedOn="{StaticResource SquareButtonStyle}">
                                        <Setter Property="FontFamily"
                                                Value="{StaticResource IoniconsFont}" />
                                        <Setter Property="FontSize"
                                                Value="Title" />
                                        <Setter Property="VisualStateManager.VisualStateGroups">
                                            <VisualStateGroupList>
                                                <VisualStateGroup>
                                                    <VisualState Name="{Static VisualStateManager+CommonStates.Normal}" />
                                                    <VisualState Name="{Static VisualStateManager+CommonStates.Selected}">
                                                        <VisualState.Setters>
                                                            <Setter Property="BackgroundColor"
                                                                    Value="{StaticResource Primary}" />

                                                            <Setter Property="TextColor"
                                                                    Value="{StaticResource DarkPrimaryText}" />
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateGroupList>
                                        </Setter>
                                    </Style>
                                </VisualElement.Resources>

                                <Button BindingContext="List"
                                        Text="{OnPlatform iOS='&#xf453;', Android='&#xf391;'}" />
                                <Button BindingContext="Grid"
                                        Text="&#xf13f;" />
                            </StackLayout>
                        </Grid>
                    </StackLayout>
                </CollectionView.Header>

                <CollectionView.Footer>
                    <StackLayout Orientation="Vertical"
                                 Spacing="10"
                                 Padding="10,0">
                        <views:SectionView Title="People"
                                           IsVisible="False">
                            <VisualElement.Triggers>
                                <DataTrigger TargetType="VisualElement"
                                             Binding="{Binding Converter={Static forms:GetTypeConverter.Instance}}"
                                             Value="{x:Type viewmodels:TVSeasonViewModel}">
                                    <Setter Property="IsVisible"
                                            Value="True" />
                                </DataTrigger>
                            </VisualElement.Triggers>

                            <StackLayout Orientation="Vertical"
                                         views:Extensions.Batch="{OnPlatform Android={Binding BindingContext, Source={x:Reference root}}}">
                                <views:SectionView Title="Cast"
                                                   ext:ContentView.ItemSource="{Binding Cast, TargetNullValue={StaticResource EmptyCredits}}"
                                                   Style="{StaticResource InfoSubsectionStyle}" />

                                <views:SectionView Title="Crew"
                                                   ext:ContentView.ItemSource="{Binding Crew, TargetNullValue={StaticResource EmptyCredits}}"
                                                   Style="{StaticResource InfoSubsectionStyle}" />
                            </StackLayout>
                        </views:SectionView>

                        <forms:AdView Style="{StaticResource BannerAdStyle}"
                                      AdUnitID="{Static movies:App.BottomBannerAdUnitID}" />
                    </StackLayout>
                </CollectionView.Footer>

                <!--<VisualElement.Triggers>
                <DataTrigger TargetType="CollectionView"
                             Binding="{Binding Converter={Static views:GetTypeConverter.Instance}}"
                             Value="{x:Type viewmodels:TVSeasonViewModel}">
                    <Setter Property="Footer">
                        <views:SectionView Title="People">
                            <StackLayout Orientation="Vertical">
                                <views:SectionView Title="Crew"
                                                   ext:ContentView.ItemSource="{Binding Crew, TargetNullValue={StaticResource EmptyCredits}}"
                                                   Style="{StaticResource InfoSubsectionStyle}" />

                                <views:SectionView Title="Cast"
                                                   ext:ContentView.ItemSource="{Binding Cast, TargetNullValue={StaticResource EmptyCredits}}"
                                                   Style="{StaticResource InfoSubsectionStyle}" />
                            </StackLayout>
                        </views:SectionView>
                    </Setter>
                </DataTrigger>
            </VisualElement.Triggers>-->

                <CollectionView.EmptyView>
                    <Binding Path="DrawerContentView.IsVisibl"
                             Source="{RelativeSource AncestorType={x:Type forms:DrawerView}}">
                        <Binding.Converter>
                            <forms:BoolToObjectConverter TrueObject="Hmm... Nothing to show here. Maybe try a different search?"
                                                         FalseObject="No items" />
                        </Binding.Converter>
                    </Binding>
                </CollectionView.EmptyView>
            </CollectionView>

            <ActivityIndicator IsRunning="{Binding Loading}"
                               HorizontalOptions="Center"
                               VerticalOptions="Center"
                               Grid.Row="0" />

            <StackLayout Orientation="Horizontal"
                         Padding="10, 5"
                         IsVisible="{Binding Editing, FallbackValue='False'}"
                         StyleClass="SecondaryBackground"
                         Grid.Row="1">
                <Button Text="Delete"
                        HorizontalOptions="EndAndExpand"
                        Command="{Binding RemoveMultipleCommand}"
                        CommandParameter="{Binding SelectedItems, Source={x:Reference collectionView}}" />
            </StackLayout>
        </Grid>
    </forms:DrawerView>
</ControlTemplate>